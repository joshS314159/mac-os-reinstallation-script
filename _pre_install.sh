#!/bin/bash

set -o pipefail


#########################
# GLOBALS ###############
#########################
declare -r FILE_NAME="$0"
declare -r FILE_NAME=$(basename $0)
declare -r ARGS="$@"

declare -r APPLE_SCRIPTS="./support/scripts/apple_scripts/"
declare -r BASH_SCRIPTS="./support/scripts/bash/"

declare -r do_repos_stuff_manually=true



#######################################################################################################
#######################################################################################################
# read paramters in ###################################################################################
#######################################################################################################
#######################################################################################################
function read_parameters() {
    local -r args="$1"
    
    # Transform long options to short ones
    for arg in "$args"; do
      shift
      case "$arg" in
        "--help") set -- "$@" "-h" ;;
        "--rest") set -- "$@" "-r" ;;
        "--ws")   set -- "$@" "-w" ;;
        *)        set -- "$@" "$arg"
      esac
    done

    # Default behavior
    local rest=false
    local ws=false

    # Parse short options
    local -r OPTIND=1
    while getopts "hrw" opt
    do
      case "$opt" in
        "h") print_usage; exit 0 ;;
        "r") rest=true ;;
        "w") ws=true ;;
        "?") print_usage >&2; exit 1 ;;
      esac
    done
    shift $(expr $OPTIND - 1) # remove options from positional parameters
}



#######################################################################################################
#######################################################################################################
# print the usage #####################################################################################
# displays usage information to the user for this script ##############################################
# http://docopt.org ###################################################################################
#######################################################################################################
#######################################################################################################
function print_usage(){
  echo "-----------------------------------------------------------------------------------------------------"
  echo "Usage: $PROGRAM ( --help )"
  echo 
  echo "       --help | -h        HELP: displays this usage page"
  echo
  echo "-----------------------------------------------------------------------------------------------------"
}




#######################################################################################################
#######################################################################################################
# # dumps all installed homebrew stuff into a Brewfile ################################################
#######################################################################################################
#######################################################################################################
function dump_homebrew(){
    brew bundle dump --force --file="./support/resources/brew/Brewfile"
}


#######################################################################################################
#######################################################################################################
# run devonthink index and sync apple scripts #########################################################
#######################################################################################################
#######################################################################################################

function index_and_sync_devonthink(){
    (   cd $APPLE_SCRIPTS
        osascript "index_devonthink.scpt"
        osascript "sync_devonthink.scpt"
    )
}


#######################################################################################################
#######################################################################################################
# links any new apps to have pref files sym linked ####################################################
#######################################################################################################
#######################################################################################################
function backup_mackup(){
    mackup backup
}


#######################################################################################################
#######################################################################################################
# run arq backup ######################################################################################
#######################################################################################################
#######################################################################################################
function backup_arq(){
    (   cd "/Applications/Arq.app/Contents/MacOS"
    
        # select B2
        ./Arq backupnow
    
        # select local
        ./Arq backupnow
    )
}


#######################################################################################################
#######################################################################################################
# main ################################################################################################
#######################################################################################################
#######################################################################################################
function main(){
    read_parameters $ARGS
    
    index_and_sync_devonthink
    dump_homebrew
    # backup_mackup
    backup_arq
}
main




